# -- Clocks.py as part of FERS XML File I/O as part of FERS Plugin
# -- Created by James Gripper 
# -- November 2016
# -*- coding: utf-8 -*-#

from PyQt4 import QtCore, QtGui
from addNodes import *
from lxml import etree
import FERS_Input
import sys
import os

## reads in filename string
placeholder = open("filename.txt", "r")
filename = placeholder.read()
placeholder.close() 

## creates parser object
parser = etree.XMLParser(remove_blank_text=True,ns_clean=True)

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_Clocks(object):

    def setupUi(self, Clocks):
        Clocks.setObjectName(_fromUtf8("Clocks"))
        Clocks.resize(530, 385)
        self.verticalLayout = QtGui.QVBoxLayout(Clocks)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.horizontalLayout1 = QtGui.QHBoxLayout()
        self.horizontalLayout1.setObjectName(_fromUtf8("horizontalLayout1"))
        self.Clocks_label = QtGui.QLabel(Clocks)
        self.Clocks_label.setWordWrap(True)
        self.Clocks_label.setObjectName(_fromUtf8("Clocks_label"))
        self.horizontalLayout1.addWidget(self.Clocks_label)
        self.gridLayout1 = QtGui.QGridLayout()
        self.gridLayout1.setObjectName(_fromUtf8("gridLayout1"))
        self.horizontalLayout = QtGui.QHBoxLayout()
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.Clocks_Remove_btn = QtGui.QPushButton(Clocks)
        self.Clocks_Remove_btn.setObjectName(_fromUtf8("Clocks_Remove_btn"))
        self.horizontalLayout.addWidget(self.Clocks_Remove_btn)
        self.gridLayout1.addLayout(self.horizontalLayout, 12, 1, 1, 1)
        self.Clocks_rand_freq_offset_input = QtGui.QLineEdit(Clocks)
        self.Clocks_rand_freq_offset_input.setObjectName(_fromUtf8("Clocks_rand_freq_offset_input"))
        self.gridLayout1.addWidget(self.Clocks_rand_freq_offset_input, 7, 1, 1, 1)
        self.Tx_Z_Val_label_8 = QtGui.QLabel(Clocks)
        self.Tx_Z_Val_label_8.setWordWrap(True)
        self.Tx_Z_Val_label_8.setObjectName(_fromUtf8("Tx_Z_Val_label_8"))
        self.gridLayout1.addWidget(self.Tx_Z_Val_label_8, 8, 0, 1, 1)
        self.Tx_Z_Clear_btn_3 = QtGui.QPushButton(Clocks)
        self.Tx_Z_Clear_btn_3.setObjectName(_fromUtf8("Tx_Z_Clear_btn_3"))
        self.gridLayout1.addWidget(self.Tx_Z_Clear_btn_3, 8, 3, 1, 1)
        self.Tx_Z_Clear_btn_4 = QtGui.QPushButton(Clocks)
        self.Tx_Z_Clear_btn_4.setObjectName(_fromUtf8("Tx_Z_Clear_btn_4"))
        self.gridLayout1.addWidget(self.Tx_Z_Clear_btn_4, 2, 3, 1, 1)
        self.Tx_Z_Clear_btn_9 = QtGui.QPushButton(Clocks)
        self.Tx_Z_Clear_btn_9.setObjectName(_fromUtf8("Tx_Z_Clear_btn_9"))
        self.gridLayout1.addWidget(self.Tx_Z_Clear_btn_9, 4, 3, 1, 1)
        self.Tx_Y_Val_label = QtGui.QLabel(Clocks)
        self.Tx_Y_Val_label.setObjectName(_fromUtf8("Tx_Y_Val_label"))
        self.gridLayout1.addWidget(self.Tx_Y_Val_label, 1, 0, 1, 1)
        self.Tx_Z_Clear_btn_8 = QtGui.QPushButton(Clocks)
        self.Tx_Z_Clear_btn_8.setObjectName(_fromUtf8("Tx_Z_Clear_btn_8"))
        self.gridLayout1.addWidget(self.Tx_Z_Clear_btn_8, 5, 3, 1, 1)
        self.Clocks_frequency_input = QtGui.QLineEdit(Clocks)
        self.Clocks_frequency_input.setObjectName(_fromUtf8("Clocks_frequency_input"))
        self.gridLayout1.addWidget(self.Clocks_frequency_input, 1, 1, 1, 1)
        self.Tx_Z_Clear_btn_6 = QtGui.QPushButton(Clocks)
        self.Tx_Z_Clear_btn_6.setObjectName(_fromUtf8("Tx_Z_Clear_btn_6"))
        self.gridLayout1.addWidget(self.Tx_Z_Clear_btn_6, 6, 3, 1, 1)
        self.Tx_X_Clear_btn = QtGui.QPushButton(Clocks)
        self.Tx_X_Clear_btn.setObjectName(_fromUtf8("Tx_X_Clear_btn"))
        self.gridLayout1.addWidget(self.Tx_X_Clear_btn, 0, 3, 1, 1)
        self.Tx_Z_Clear_btn_7 = QtGui.QPushButton(Clocks)
        self.Tx_Z_Clear_btn_7.setObjectName(_fromUtf8("Tx_Z_Clear_btn_7"))
        self.gridLayout1.addWidget(self.Tx_Z_Clear_btn_7, 7, 3, 1, 1)
        self.Tx_Z_Val_label_4 = QtGui.QLabel(Clocks)
        self.Tx_Z_Val_label_4.setObjectName(_fromUtf8("Tx_Z_Val_label_4"))
        self.gridLayout1.addWidget(self.Tx_Z_Val_label_4, 5, 0, 1, 1)
        self.Tx_Z_Clear_btn_5 = QtGui.QPushButton(Clocks)
        self.Tx_Z_Clear_btn_5.setObjectName(_fromUtf8("Tx_Z_Clear_btn_5"))
        self.gridLayout1.addWidget(self.Tx_Z_Clear_btn_5, 3, 3, 1, 1)
        self.Tx_Z_Val_label_6 = QtGui.QLabel(Clocks)
        self.Tx_Z_Val_label_6.setObjectName(_fromUtf8("Tx_Z_Val_label_6"))
        self.gridLayout1.addWidget(self.Tx_Z_Val_label_6, 7, 0, 1, 1)
        self.Clocks_name_input = QtGui.QLineEdit(Clocks)
        self.Clocks_name_input.setObjectName(_fromUtf8("Clocks_name_input"))
        self.gridLayout1.addWidget(self.Clocks_name_input, 0, 1, 1, 1)
        self.Clocks_noise_alpha_input = QtGui.QLineEdit(Clocks)
        self.Clocks_noise_alpha_input.setObjectName(_fromUtf8("Clocks_noise_alpha_input"))
        self.gridLayout1.addWidget(self.Clocks_noise_alpha_input, 3, 1, 1, 1)
        self.Tx_Z_Clear_btn = QtGui.QPushButton(Clocks)
        self.Tx_Z_Clear_btn.setObjectName(_fromUtf8("Tx_Z_Clear_btn"))
        self.gridLayout1.addWidget(self.Tx_Z_Clear_btn, 1, 3, 1, 1)
        self.Clocks_viewXML_btn = QtGui.QPushButton(Clocks)
        self.Clocks_viewXML_btn.setObjectName(_fromUtf8("Clocks_viewXML_btn"))
        self.gridLayout1.addWidget(self.Clocks_viewXML_btn, 12, 3, 1, 1)
        self.Clocks_freq_offset_input = QtGui.QLineEdit(Clocks)
        self.Clocks_freq_offset_input.setObjectName(_fromUtf8("Clocks_freq_offset_input"))
        self.gridLayout1.addWidget(self.Clocks_freq_offset_input, 5, 1, 1, 1)
        self.Tx_Z_Val_label_9 = QtGui.QLabel(Clocks)
        self.Tx_Z_Val_label_9.setWordWrap(True)
        self.Tx_Z_Val_label_9.setObjectName(_fromUtf8("Tx_Z_Val_label_9"))
        self.gridLayout1.addWidget(self.Tx_Z_Val_label_9, 9, 0, 1, 1)
        self.label_5 = QtGui.QLabel(Clocks)
        self.label_5.setObjectName(_fromUtf8("label_5"))
        self.gridLayout1.addWidget(self.label_5, 4, 2, 1, 1)
        self.label_3 = QtGui.QLabel(Clocks)
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.gridLayout1.addWidget(self.label_3, 2, 2, 1, 1)
        self.label_8 = QtGui.QLabel(Clocks)
        self.label_8.setObjectName(_fromUtf8("label_8"))
        self.gridLayout1.addWidget(self.label_8, 7, 2, 1, 1)
        self.Clocks_rand_phase_offset_input = QtGui.QLineEdit(Clocks)
        self.Clocks_rand_phase_offset_input.setObjectName(_fromUtf8("Clocks_rand_phase_offset_input"))
        self.gridLayout1.addWidget(self.Clocks_rand_phase_offset_input, 8, 1, 1, 1)
        self.label_7 = QtGui.QLabel(Clocks)
        self.label_7.setObjectName(_fromUtf8("label_7"))
        self.gridLayout1.addWidget(self.label_7, 6, 2, 1, 1)
        self.label_6 = QtGui.QLabel(Clocks)
        self.label_6.setObjectName(_fromUtf8("label_6"))
        self.gridLayout1.addWidget(self.label_6, 5, 2, 1, 1)
        self.Clocks_syncho_sel = QtGui.QCheckBox(Clocks)
        self.Clocks_syncho_sel.setText(_fromUtf8(""))
        self.Clocks_syncho_sel.setObjectName(_fromUtf8("Clocks_syncho_sel"))
        self.gridLayout1.addWidget(self.Clocks_syncho_sel, 9, 1, 1, 1)
        self.label_2 = QtGui.QLabel(Clocks)
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.gridLayout1.addWidget(self.label_2, 1, 2, 1, 1)
        self.label_9 = QtGui.QLabel(Clocks)
        self.label_9.setObjectName(_fromUtf8("label_9"))
        self.gridLayout1.addWidget(self.label_9, 8, 2, 1, 1)
        self.Tx_Z_Val_label = QtGui.QLabel(Clocks)
        self.Tx_Z_Val_label.setObjectName(_fromUtf8("Tx_Z_Val_label"))
        self.gridLayout1.addWidget(self.Tx_Z_Val_label, 2, 0, 1, 1)
        self.Clocks_phase_offset_input = QtGui.QLineEdit(Clocks)
        self.Clocks_phase_offset_input.setObjectName(_fromUtf8("Clocks_phase_offset_input"))
        self.gridLayout1.addWidget(self.Clocks_phase_offset_input, 6, 1, 1, 1)
        self.Clocks_name_label = QtGui.QLabel(Clocks)
        self.Clocks_name_label.setObjectName(_fromUtf8("Clocks_name_label"))
        self.gridLayout1.addWidget(self.Clocks_name_label, 0, 0, 1, 1)
        self.label_4 = QtGui.QLabel(Clocks)
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.gridLayout1.addWidget(self.label_4, 3, 2, 1, 1)
        self.Tx_Z_Val_label_3 = QtGui.QLabel(Clocks)
        self.Tx_Z_Val_label_3.setObjectName(_fromUtf8("Tx_Z_Val_label_3"))
        self.gridLayout1.addWidget(self.Tx_Z_Val_label_3, 3, 0, 1, 1)
        self.Tx_Z_Val_label_5 = QtGui.QLabel(Clocks)
        self.Tx_Z_Val_label_5.setObjectName(_fromUtf8("Tx_Z_Val_label_5"))
        self.gridLayout1.addWidget(self.Tx_Z_Val_label_5, 4, 0, 1, 1)
        self.Clocks_jitter_input = QtGui.QLineEdit(Clocks)
        self.Clocks_jitter_input.setObjectName(_fromUtf8("Clocks_jitter_input"))
        self.gridLayout1.addWidget(self.Clocks_jitter_input, 2, 1, 1, 1)
        self.Tx_Z_Val_label_7 = QtGui.QLabel(Clocks)
        self.Tx_Z_Val_label_7.setObjectName(_fromUtf8("Tx_Z_Val_label_7"))
        self.gridLayout1.addWidget(self.Tx_Z_Val_label_7, 6, 0, 1, 1)
        self.Clocks_noise_weight_input = QtGui.QLineEdit(Clocks)
        self.Clocks_noise_weight_input.setObjectName(_fromUtf8("Clocks_noise_weight_input"))
        self.gridLayout1.addWidget(self.Clocks_noise_weight_input, 4, 1, 1, 1)
        self.Tx_Z_Val_label_10 = QtGui.QLabel(Clocks)
        self.Tx_Z_Val_label_10.setWordWrap(True)
        self.Tx_Z_Val_label_10.setObjectName(_fromUtf8("Tx_Z_Val_label_10"))
        self.gridLayout1.addWidget(self.Tx_Z_Val_label_10, 11, 0, 1, 1)
        self.Clocks_Add_btn = QtGui.QPushButton(Clocks)
        self.Clocks_Add_btn.setObjectName(_fromUtf8("Clocks_Add_btn"))
        self.gridLayout1.addWidget(self.Clocks_Add_btn, 10, 1, 1, 1)
        self.Clocks_removal_input = QtGui.QLineEdit(Clocks)
        self.Clocks_removal_input.setObjectName(_fromUtf8("Clocks_removal_input"))
        self.gridLayout1.addWidget(self.Clocks_removal_input, 11, 1, 1, 1)
        self.Tx_Z_Clear_btn_10 = QtGui.QPushButton(Clocks)
        self.Tx_Z_Clear_btn_10.setObjectName(_fromUtf8("Tx_Z_Clear_btn_10"))
        self.gridLayout1.addWidget(self.Tx_Z_Clear_btn_10, 11, 3, 1, 1)
        self.gridLayout1.setColumnStretch(0, 8)
        self.horizontalLayout1.addLayout(self.gridLayout1)
        self.verticalLayout.addLayout(self.horizontalLayout1)

        self.retranslateUi(Clocks)
        QtCore.QObject.connect(self.Tx_X_Clear_btn, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_name_input.clear)
        QtCore.QObject.connect(self.Tx_Z_Clear_btn, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_frequency_input.clear)
        QtCore.QObject.connect(self.Tx_Z_Clear_btn_4, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_jitter_input.clear)
        QtCore.QObject.connect(self.Tx_Z_Clear_btn_5, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_noise_alpha_input.clear)
        QtCore.QObject.connect(self.Tx_Z_Clear_btn_9, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_noise_weight_input.clear)
        QtCore.QObject.connect(self.Tx_Z_Clear_btn_8, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_freq_offset_input.clear)
        QtCore.QObject.connect(self.Tx_Z_Clear_btn_6, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_phase_offset_input.clear)
        QtCore.QObject.connect(self.Tx_Z_Clear_btn_7, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_rand_freq_offset_input.clear)
        QtCore.QObject.connect(self.Tx_Z_Clear_btn_3, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_rand_phase_offset_input.clear)
        QtCore.QObject.connect(self.Tx_Z_Clear_btn_10, QtCore.SIGNAL(_fromUtf8("clicked()")), self.Clocks_removal_input.clear)
        QtCore.QMetaObject.connectSlotsByName(Clocks)
        Clocks.setTabOrder(self.Clocks_name_input, self.Clocks_frequency_input)
        Clocks.setTabOrder(self.Clocks_frequency_input, self.Clocks_jitter_input)
        Clocks.setTabOrder(self.Clocks_jitter_input, self.Clocks_noise_alpha_input)
        Clocks.setTabOrder(self.Clocks_noise_alpha_input, self.Clocks_noise_weight_input)
        Clocks.setTabOrder(self.Clocks_noise_weight_input, self.Clocks_freq_offset_input)
        Clocks.setTabOrder(self.Clocks_freq_offset_input, self.Clocks_phase_offset_input)
        Clocks.setTabOrder(self.Clocks_phase_offset_input, self.Clocks_rand_freq_offset_input)
        Clocks.setTabOrder(self.Clocks_rand_freq_offset_input, self.Clocks_rand_phase_offset_input)
        Clocks.setTabOrder(self.Clocks_rand_phase_offset_input, self.Clocks_syncho_sel)
        Clocks.setTabOrder(self.Clocks_syncho_sel, self.Clocks_Add_btn)
        Clocks.setTabOrder(self.Clocks_Add_btn, self.Clocks_removal_input)
        Clocks.setTabOrder(self.Clocks_removal_input, self.Clocks_Remove_btn)
        Clocks.setTabOrder(self.Clocks_Remove_btn, self.Clocks_viewXML_btn)
        Clocks.setTabOrder(self.Clocks_viewXML_btn, self.Tx_X_Clear_btn)
        Clocks.setTabOrder(self.Tx_X_Clear_btn, self.Tx_Z_Clear_btn)
        Clocks.setTabOrder(self.Tx_Z_Clear_btn, self.Tx_Z_Clear_btn_4)
        Clocks.setTabOrder(self.Tx_Z_Clear_btn_4, self.Tx_Z_Clear_btn_5)
        Clocks.setTabOrder(self.Tx_Z_Clear_btn_5, self.Tx_Z_Clear_btn_9)
        Clocks.setTabOrder(self.Tx_Z_Clear_btn_9, self.Tx_Z_Clear_btn_8)
        Clocks.setTabOrder(self.Tx_Z_Clear_btn_8, self.Tx_Z_Clear_btn_6)
        Clocks.setTabOrder(self.Tx_Z_Clear_btn_6, self.Tx_Z_Clear_btn_7)
        Clocks.setTabOrder(self.Tx_Z_Clear_btn_7, self.Tx_Z_Clear_btn_3)
        Clocks.setTabOrder(self.Tx_Z_Clear_btn_3, self.Tx_Z_Clear_btn_10)

    def retranslateUi(self, Clocks):
        Clocks.setWindowTitle(_translate("Clocks", "Clocks", None))
        self.Clocks_label.setText(_translate("Clocks", "Clocks                   ", None))
        self.Clocks_Remove_btn.setText(_translate("Clocks", "Remove fromXML", None))
        self.Clocks_rand_freq_offset_input.setPlaceholderText(_translate("Clocks", "<Sample Value>", None))
        self.Tx_Z_Val_label_8.setText(_translate("Clocks", "Random Phase Offset", None))
        self.Tx_Z_Clear_btn_3.setText(_translate("Clocks", "Clear", None))
        self.Tx_Z_Clear_btn_4.setText(_translate("Clocks", "Clear", None))
        self.Tx_Z_Clear_btn_9.setText(_translate("Clocks", "Clear", None))
        self.Tx_Y_Val_label.setText(_translate("Clocks", "Frequency", None))
        self.Tx_Z_Clear_btn_8.setText(_translate("Clocks", "Clear", None))
        self.Clocks_frequency_input.setPlaceholderText(_translate("Clocks", "<Value Hz>", None))
        self.Tx_Z_Clear_btn_6.setText(_translate("Clocks", "Clear", None))
        self.Tx_X_Clear_btn.setText(_translate("Clocks", "Clear", None))
        self.Tx_Z_Clear_btn_7.setText(_translate("Clocks", "Clear", None))
        self.Tx_Z_Val_label_4.setText(_translate("Clocks", "Frequency Offset", None))
        self.Tx_Z_Clear_btn_5.setText(_translate("Clocks", "Clear", None))
        self.Tx_Z_Val_label_6.setText(_translate("Clocks", "Random Frequency Offset", None))
        self.Clocks_name_input.setPlaceholderText(_translate("Clocks", "<Sample Name>", None))
        self.Clocks_noise_alpha_input.setPlaceholderText(_translate("Clocks", "<Sample Value>", None))
        self.Tx_Z_Clear_btn.setText(_translate("Clocks", "Clear", None))
        self.Clocks_viewXML_btn.setText(_translate("Clocks", "View XML", None))
        self.Clocks_freq_offset_input.setPlaceholderText(_translate("Clocks", "<Value Hz>", None))
        self.Tx_Z_Val_label_9.setText(_translate("Clocks", "Sync on pulse", None))
        self.label_5.setText(_translate("Clocks", "unit", None))
        self.label_3.setText(_translate("Clocks", "unit", None))
        self.label_8.setText(_translate("Clocks", "Hz", None))
        self.Clocks_rand_phase_offset_input.setPlaceholderText(_translate("Clocks", "<Sample Value>", None))
        self.label_7.setText(_translate("Clocks", "unit", None))
        self.label_6.setText(_translate("Clocks", "Hz", None))
        self.label_2.setText(_translate("Clocks", "Hz", None))
        self.label_9.setText(_translate("Clocks", "unit", None))
        self.Tx_Z_Val_label.setText(_translate("Clocks", "Jitter", None))
        self.Clocks_phase_offset_input.setPlaceholderText(_translate("Clocks", "<Sample Value> ", None))
        self.Clocks_name_label.setText(_translate("Clocks", "Name", None))
        self.label_4.setText(_translate("Clocks", "unit", None))
        self.Tx_Z_Val_label_3.setText(_translate("Clocks", "Noise (alpha)", None))
        self.Tx_Z_Val_label_5.setText(_translate("Clocks", "Noise (weight)", None))
        self.Clocks_jitter_input.setPlaceholderText(_translate("Clocks", "<Sample Value>", None))
        self.Tx_Z_Val_label_7.setText(_translate("Clocks", "Phase Offset", None))
        self.Clocks_noise_weight_input.setPlaceholderText(_translate("Clocks", "<Sample Value>", None))
        self.Tx_Z_Val_label_10.setText(_translate("Clocks", "Remove existing clock", None))
        self.Clocks_Add_btn.setText(_translate("Clocks", "Add to XML", None))
        self.Clocks_removal_input.setPlaceholderText(_translate("Clocks", "<Sample Name>", None))
        self.Tx_Z_Clear_btn_10.setText(_translate("Clocks", "Clear", None))

        ## connects functions to buttons
        self.Clocks_Add_btn.clicked.connect(self.callAppend)
        self.Clocks_viewXML_btn.clicked.connect(self.showEntry)
        self.Clocks_Remove_btn.clicked.connect(self.removeNode)
    
    ## removes clock from simulation
    def removeNode(self):
        doc = etree.parse(filename, parser)
        sim = doc.getroot()
        tree=etree.ElementTree(sim)  
        for timing in sim.findall('timing'):
            name = timing.get('name')
            if name == str(self.Clocks_removal_input.text()):            
                sim.remove(timing)
                doc.write(filename,pretty_print=False)
                print '--Clock removed--'
            else:
                print "--Clock not found--"                
    
    ## prints formatted xml to console            
    def showEntry(self):
        doc = etree.parse(filename, parser)
        print(etree.tostring(doc, pretty_print=True)) 
    
    ## adds clock to simulation
    def callAppend(self):
        name = str(self.Clocks_name_input.text())
        clock_freq = str(self.Clocks_frequency_input.text())
        jit = str(self.Clocks_jitter_input.text())
        loud = str(self.Clocks_noise_weight_input.text())
        alpha_value = str(self.Clocks_noise_alpha_input.text())
        mass = str(self.Clocks_noise_weight_input.text())
        phase_offset = str(self.Clocks_phase_offset_input.text())
        freq_offset = str(self.Clocks_freq_offset_input.text())
        Rfreq_off = str(self.Clocks_rand_freq_offset_input.text())
        Rphase_off = str(self.Clocks_rand_phase_offset_input.text())

        if (self.Clocks_syncho_sel.isChecked()):
            syncon = 'true'
        else:
            syncon = 'false'

        appendTiming(filename, name, syncon, clock_freq, jit, alpha_value, mass, freq_offset, phase_offset, Rfreq_off, Rphase_off)
        print '--Clock Added--'


if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    Clocks = QtGui.QWidget()
    ui = Ui_Clocks()
    ui.setupUi(Clocks)
    Clocks.show()
    sys.exit(app.exec_())

